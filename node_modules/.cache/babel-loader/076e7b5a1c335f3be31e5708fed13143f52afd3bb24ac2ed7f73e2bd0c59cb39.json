{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/test/imdb-clone-frontend/src/AddMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api } from \"./config/api.config\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField, Button, FormControl, InputLabel, MenuItem, Select, CircularProgress, Alert, Container, Box, Typography, Chip, OutlinedInput, FormHelperText, Paper, Skeleton, IconButton, Tooltip } from \"@mui/material\";\nimport { Info as InfoIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\n// List of allowed image domains and their example URLs\nconst ALLOWED_IMAGE_SOURCES = [{\n  domain: 'imgur.com',\n  example: 'https://i.imgur.com/example.jpg',\n  description: 'Imgur'\n}, {\n  domain: 'upload.wikimedia.org',\n  example: 'https://upload.wikimedia.org/wikipedia/commons/example.jpg',\n  description: 'Wikimedia Commons'\n}, {\n  domain: 'images.unsplash.com',\n  example: 'https://images.unsplash.com/photo-example.jpg',\n  description: 'Unsplash'\n}, {\n  domain: 'res.cloudinary.com',\n  example: 'https://res.cloudinary.com/your-cloud-name/image/upload/example.jpg',\n  description: 'Cloudinary'\n}, {\n  domain: 'drive.google.com',\n  example: 'https://drive.google.com/uc?export=view&id=YOUR_FILE_ID',\n  description: 'Google Drive (public links only)'\n}];\n\n// Function to validate image URL\nconst isValidImageUrl = url => {\n  try {\n    const urlObj = new URL(url);\n    const hostname = urlObj.hostname;\n\n    // Check if the hostname is in our allowed list\n    const isAllowedDomain = ALLOWED_IMAGE_SOURCES.some(({\n      domain\n    }) => hostname === domain || hostname.endsWith(`.${domain}`));\n\n    // Check if the URL uses HTTPS\n    const isHttps = urlObj.protocol === 'https:';\n\n    // Check if the path ends with an image extension or is from a trusted source\n    const hasImageExtension = /\\.(jpg|jpeg|png|gif|webp)$/i.test(urlObj.pathname) || urlObj.hostname === 'drive.google.com' || urlObj.hostname.endsWith('cloudinary.com');\n    return isAllowedDomain && isHttps && hasImageExtension;\n  } catch {\n    return false;\n  }\n};\n\n// Custom Yup test for image URL validation\nyup.addMethod(yup.string, 'isValidImageUrl', function (errorMessage) {\n  return this.test('test-valid-image-url', errorMessage, function (value) {\n    const {\n      path,\n      createError\n    } = this;\n    return !value || isValidImageUrl(value) || createError({\n      path,\n      message: errorMessage\n    });\n  });\n});\nconst movieValidationSchema = yup.object({\n  name: yup.string().required(\"Movie name is required\").min(3, \"Movie name must be at least 3 characters\").max(100, \"Movie name must not exceed 100 characters\").trim(),\n  desc: yup.string().required(\"Description is required\").min(10, \"Description must be at least 10 characters\").max(2000, \"Description must not exceed 2000 characters\").trim(),\n  director: yup.string().required(\"Director name is required\").min(3, \"Director name must be at least 3 characters\").max(100, \"Director name must not exceed 100 characters\").trim(),\n  poster: yup.string().required(\"Poster URL is required\").url(\"Must be a valid URL\").isValidImageUrl(\"Must be a valid HTTPS image URL from an allowed domain\").trim(),\n  yearOfRelease: yup.number().required(\"Release year is required\").min(1888, \"Year must be 1888 or later\").max(new Date().getFullYear() + 5, \"Year cannot be more than 5 years in the future\"),\n  producer: yup.string().required(\"Producer selection is required\"),\n  actors: yup.array().min(1, \"Please select at least one actor\").max(20, \"Cannot select more than 20 actors\").required(\"Actor selection is required\")\n});\nconst AddMovie = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [producers, setProducers] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [imageError, setImageError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [showImageHelp, setShowImageHelp] = useState(false);\n  const validateImageUrl = useCallback(async url => {\n    if (!url || !isValidImageUrl(url)) {\n      return false;\n    }\n    setImageLoading(true);\n    return new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        setImageLoading(false);\n        resolve(true);\n      };\n      img.onerror = () => {\n        setImageLoading(false);\n        resolve(false);\n      };\n      img.src = url;\n    });\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      desc: \"\",\n      director: \"\",\n      poster: \"\",\n      yearOfRelease: new Date().getFullYear(),\n      producer: \"\",\n      actors: []\n    },\n    validationSchema: movieValidationSchema,\n    onSubmit: async values => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Final validation of image URL\n        const isImageValid = await validateImageUrl(values.poster);\n        if (!isImageValid) {\n          formik.setFieldError('poster', 'Unable to load image from this URL');\n          setLoading(false);\n          return;\n        }\n        await api.movies.add(values);\n        navigate(\"/\");\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to add movie. Please try again.\");\n        console.error(\"Add movie error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n  useEffect(() => {\n    const validateAndSetPreview = async () => {\n      const url = formik.values.poster;\n      if (url && isValidImageUrl(url)) {\n        setImageLoading(true);\n        setPreviewUrl(url);\n        const isValid = await validateImageUrl(url);\n        setImageError(!isValid);\n      } else {\n        setPreviewUrl(\"\");\n        setImageError(false);\n      }\n    };\n    validateAndSetPreview();\n  }, [formik.values.poster, validateImageUrl]);\n  const loadInitialData = async () => {\n    try {\n      setInitialLoading(true);\n      const [producersRes, actorsRes] = await Promise.all([api.producers.getAll(), api.actors.getAll()]);\n      setProducers(producersRes.data);\n      setActors(actorsRes.data);\n    } catch (err) {\n      setError(\"Failed to load producers and actors. Please try again later.\");\n      console.error(\"Load initial data error:\", err);\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n  if (initialLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: formik.handleSubmit,\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Add New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Movie Name\",\n          ...formik.getFieldProps('name'),\n          error: formik.touched.name && Boolean(formik.errors.name),\n          helperText: formik.touched.name && formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          label: \"Description\",\n          ...formik.getFieldProps('desc'),\n          error: formik.touched.desc && Boolean(formik.errors.desc),\n          helperText: formik.touched.desc && formik.errors.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Director\",\n          ...formik.getFieldProps('director'),\n          error: formik.touched.director && Boolean(formik.errors.director),\n          helperText: formik.touched.director && formik.errors.director\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Poster URL\",\n              ...formik.getFieldProps('poster'),\n              error: formik.touched.poster && Boolean(formik.errors.poster),\n              helperText: formik.touched.poster && formik.errors.poster || \"Enter a HTTPS URL from one of the allowed sources\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Click for allowed image sources\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => setShowImageHelp(!showImageHelp),\n                    children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), showImageHelp && /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                mt: 1,\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"Allowed Image Sources:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), ALLOWED_IMAGE_SOURCES.map(({\n                description,\n                example\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [description, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  sx: {\n                    wordBreak: 'break-all'\n                  },\n                  children: [\"Example: \", example]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)]\n              }, description, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), (previewUrl || imageLoading) && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 1,\n              width: 150,\n              height: 200,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: '#f5f5f5'\n            },\n            children: imageLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this) : imageError ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"error\",\n              align: \"center\",\n              children: \"Failed to load image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewUrl,\n              alt: \"Poster preview\",\n              style: {\n                maxWidth: '100%',\n                maxHeight: '100%',\n                objectFit: 'contain'\n              },\n              onError: () => setImageError(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          label: \"Year of Release\",\n          ...formik.getFieldProps('yearOfRelease'),\n          error: formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease),\n          helperText: formik.touched.yearOfRelease && formik.errors.yearOfRelease\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: formik.touched.producer && Boolean(formik.errors.producer),\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Producer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            ...formik.getFieldProps('producer'),\n            label: \"Producer\",\n            children: producers.map(producer => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: producer._id,\n              children: producer.name\n            }, producer._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), formik.touched.producer && formik.errors.producer && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: formik.errors.producer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: formik.touched.actors && Boolean(formik.errors.actors),\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Actors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            ...formik.getFieldProps('actors'),\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Actors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 22\n            }, this),\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => {\n                var _actors$find;\n                return /*#__PURE__*/_jsxDEV(Chip, {\n                  label: (_actors$find = actors.find(actor => actor._id === value)) === null || _actors$find === void 0 ? void 0 : _actors$find.name,\n                  size: \"small\"\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this),\n            MenuProps: MenuProps,\n            children: actors.map(actor => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: actor._id,\n              children: actor.name\n            }, actor._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), formik.touched.actors && formik.errors.actors && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: formik.errors.actors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: loading,\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this) : 'Add Movie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMovie, \"81Byc90mYCeptgUDHXeoFZ3Yu3g=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = AddMovie;\nexport default AddMovie;\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","api","useFormik","yup","TextField","Button","FormControl","InputLabel","MenuItem","Select","CircularProgress","Alert","Container","Box","Typography","Chip","OutlinedInput","FormHelperText","Paper","Skeleton","IconButton","Tooltip","Info","InfoIcon","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","ALLOWED_IMAGE_SOURCES","domain","example","description","isValidImageUrl","url","urlObj","URL","hostname","isAllowedDomain","some","endsWith","isHttps","protocol","hasImageExtension","test","pathname","addMethod","string","errorMessage","value","path","createError","message","movieValidationSchema","object","name","required","min","max","trim","desc","director","poster","yearOfRelease","number","Date","getFullYear","producer","actors","array","AddMovie","_s","navigate","loading","setLoading","initialLoading","setInitialLoading","error","setError","producers","setProducers","setActors","previewUrl","setPreviewUrl","imageError","setImageError","imageLoading","setImageLoading","showImageHelp","setShowImageHelp","validateImageUrl","Promise","resolve","img","Image","onload","onerror","src","formik","initialValues","validationSchema","onSubmit","values","isImageValid","setFieldError","movies","add","err","_err$response","_err$response$data","response","data","console","loadInitialData","validateAndSetPreview","isValid","producersRes","actorsRes","all","getAll","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","component","handleSubmit","sx","mt","mb","variant","gutterBottom","severity","gap","fullWidth","label","getFieldProps","touched","Boolean","errors","helperText","multiline","rows","flex","InputProps","endAdornment","title","size","onClick","p","map","color","wordBreak","elevation","height","backgroundColor","align","alt","objectFit","onError","type","_id","multiple","input","renderValue","selected","flexWrap","_actors$find","find","actor","disabled","_c","$RefreshReg$"],"sources":["/Users/jayachandran/test/imdb-clone-frontend/src/AddMovie.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api } from \"./config/api.config\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  CircularProgress,\n  Alert,\n  Container,\n  Box,\n  Typography,\n  Chip,\n  OutlinedInput,\n  FormHelperText,\n  Paper,\n  Skeleton,\n  IconButton,\n  Tooltip\n} from \"@mui/material\";\nimport { Info as InfoIcon } from '@mui/icons-material';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n// List of allowed image domains and their example URLs\nconst ALLOWED_IMAGE_SOURCES = [\n  {\n    domain: 'imgur.com',\n    example: 'https://i.imgur.com/example.jpg',\n    description: 'Imgur'\n  },\n  {\n    domain: 'upload.wikimedia.org',\n    example: 'https://upload.wikimedia.org/wikipedia/commons/example.jpg',\n    description: 'Wikimedia Commons'\n  },\n  {\n    domain: 'images.unsplash.com',\n    example: 'https://images.unsplash.com/photo-example.jpg',\n    description: 'Unsplash'\n  },\n  {\n    domain: 'res.cloudinary.com',\n    example: 'https://res.cloudinary.com/your-cloud-name/image/upload/example.jpg',\n    description: 'Cloudinary'\n  },\n  {\n    domain: 'drive.google.com',\n    example: 'https://drive.google.com/uc?export=view&id=YOUR_FILE_ID',\n    description: 'Google Drive (public links only)'\n  }\n];\n\n// Function to validate image URL\nconst isValidImageUrl = (url) => {\n  try {\n    const urlObj = new URL(url);\n    const hostname = urlObj.hostname;\n    \n    // Check if the hostname is in our allowed list\n    const isAllowedDomain = ALLOWED_IMAGE_SOURCES.some(({ domain }) => \n      hostname === domain || hostname.endsWith(`.${domain}`)\n    );\n\n    // Check if the URL uses HTTPS\n    const isHttps = urlObj.protocol === 'https:';\n\n    // Check if the path ends with an image extension or is from a trusted source\n    const hasImageExtension = /\\.(jpg|jpeg|png|gif|webp)$/i.test(urlObj.pathname) ||\n      urlObj.hostname === 'drive.google.com' ||\n      urlObj.hostname.endsWith('cloudinary.com');\n\n    return isAllowedDomain && isHttps && hasImageExtension;\n  } catch {\n    return false;\n  }\n};\n\n// Custom Yup test for image URL validation\nyup.addMethod(yup.string, 'isValidImageUrl', function (errorMessage) {\n  return this.test('test-valid-image-url', errorMessage, function (value) {\n    const { path, createError } = this;\n    return !value || isValidImageUrl(value) || createError({\n      path,\n      message: errorMessage\n    });\n  });\n});\n\nconst movieValidationSchema = yup.object({\n  name: yup\n    .string()\n    .required(\"Movie name is required\")\n    .min(3, \"Movie name must be at least 3 characters\")\n    .max(100, \"Movie name must not exceed 100 characters\")\n    .trim(),\n  desc: yup\n    .string()\n    .required(\"Description is required\")\n    .min(10, \"Description must be at least 10 characters\")\n    .max(2000, \"Description must not exceed 2000 characters\")\n    .trim(),\n  director: yup\n    .string()\n    .required(\"Director name is required\")\n    .min(3, \"Director name must be at least 3 characters\")\n    .max(100, \"Director name must not exceed 100 characters\")\n    .trim(),\n  poster: yup\n    .string()\n    .required(\"Poster URL is required\")\n    .url(\"Must be a valid URL\")\n    .isValidImageUrl(\"Must be a valid HTTPS image URL from an allowed domain\")\n    .trim(),\n  yearOfRelease: yup\n    .number()\n    .required(\"Release year is required\")\n    .min(1888, \"Year must be 1888 or later\")\n    .max(new Date().getFullYear() + 5, \"Year cannot be more than 5 years in the future\"),\n  producer: yup\n    .string()\n    .required(\"Producer selection is required\"),\n  actors: yup\n    .array()\n    .min(1, \"Please select at least one actor\")\n    .max(20, \"Cannot select more than 20 actors\")\n    .required(\"Actor selection is required\")\n});\n\nconst AddMovie = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [producers, setProducers] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [imageError, setImageError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [showImageHelp, setShowImageHelp] = useState(false);\n\n  const validateImageUrl = useCallback(async (url) => {\n    if (!url || !isValidImageUrl(url)) {\n      return false;\n    }\n\n    setImageLoading(true);\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => {\n        setImageLoading(false);\n        resolve(true);\n      };\n      img.onerror = () => {\n        setImageLoading(false);\n        resolve(false);\n      };\n      img.src = url;\n    });\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      desc: \"\",\n      director: \"\",\n      poster: \"\",\n      yearOfRelease: new Date().getFullYear(),\n      producer: \"\",\n      actors: []\n    },\n    validationSchema: movieValidationSchema,\n    onSubmit: async (values) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Final validation of image URL\n        const isImageValid = await validateImageUrl(values.poster);\n        if (!isImageValid) {\n          formik.setFieldError('poster', 'Unable to load image from this URL');\n          setLoading(false);\n          return;\n        }\n\n        await api.movies.add(values);\n        navigate(\"/\");\n      } catch (err) {\n        setError(err.response?.data?.message || \"Failed to add movie. Please try again.\");\n        console.error(\"Add movie error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n\n  useEffect(() => {\n    const validateAndSetPreview = async () => {\n      const url = formik.values.poster;\n      if (url && isValidImageUrl(url)) {\n        setImageLoading(true);\n        setPreviewUrl(url);\n        const isValid = await validateImageUrl(url);\n        setImageError(!isValid);\n      } else {\n        setPreviewUrl(\"\");\n        setImageError(false);\n      }\n    };\n\n    validateAndSetPreview();\n  }, [formik.values.poster, validateImageUrl]);\n\n  const loadInitialData = async () => {\n    try {\n      setInitialLoading(true);\n      const [producersRes, actorsRes] = await Promise.all([\n        api.producers.getAll(),\n        api.actors.getAll()\n      ]);\n      setProducers(producersRes.data);\n      setActors(actorsRes.data);\n    } catch (err) {\n      setError(\"Failed to load producers and actors. Please try again later.\");\n      console.error(\"Load initial data error:\", err);\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n\n  if (initialLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Add New Movie\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <Box sx={{ display: 'grid', gap: 2 }}>\n          <TextField\n            fullWidth\n            label=\"Movie Name\"\n            {...formik.getFieldProps('name')}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n\n          <TextField\n            fullWidth\n            multiline\n            rows={4}\n            label=\"Description\"\n            {...formik.getFieldProps('desc')}\n            error={formik.touched.desc && Boolean(formik.errors.desc)}\n            helperText={formik.touched.desc && formik.errors.desc}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Director\"\n            {...formik.getFieldProps('director')}\n            error={formik.touched.director && Boolean(formik.errors.director)}\n            helperText={formik.touched.director && formik.errors.director}\n          />\n\n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'flex-start' }}>\n            <Box sx={{ flex: 1 }}>\n              <TextField\n                fullWidth\n                label=\"Poster URL\"\n                {...formik.getFieldProps('poster')}\n                error={formik.touched.poster && Boolean(formik.errors.poster)}\n                helperText={\n                  (formik.touched.poster && formik.errors.poster) ||\n                  \"Enter a HTTPS URL from one of the allowed sources\"\n                }\n                InputProps={{\n                  endAdornment: (\n                    <Tooltip title=\"Click for allowed image sources\">\n                      <IconButton \n                        size=\"small\" \n                        onClick={() => setShowImageHelp(!showImageHelp)}\n                      >\n                        <InfoIcon />\n                      </IconButton>\n                    </Tooltip>\n                  ),\n                }}\n              />\n              {showImageHelp && (\n                <Paper sx={{ mt: 1, p: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Allowed Image Sources:\n                  </Typography>\n                  {ALLOWED_IMAGE_SOURCES.map(({ description, example }) => (\n                    <Box key={description} sx={{ mb: 1 }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {description}:\n                      </Typography>\n                      <Typography variant=\"caption\" display=\"block\" sx={{ wordBreak: 'break-all' }}>\n                        Example: {example}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Paper>\n              )}\n            </Box>\n            {(previewUrl || imageLoading) && (\n              <Paper \n                elevation={3} \n                sx={{ \n                  p: 1,\n                  width: 150,\n                  height: 200,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: '#f5f5f5'\n                }}\n              >\n                {imageLoading ? (\n                  <CircularProgress size={24} />\n                ) : imageError ? (\n                  <Typography variant=\"caption\" color=\"error\" align=\"center\">\n                    Failed to load image\n                  </Typography>\n                ) : (\n                  <img\n                    src={previewUrl}\n                    alt=\"Poster preview\"\n                    style={{ \n                      maxWidth: '100%',\n                      maxHeight: '100%',\n                      objectFit: 'contain'\n                    }}\n                    onError={() => setImageError(true)}\n                  />\n                )}\n              </Paper>\n            )}\n          </Box>\n\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Year of Release\"\n            {...formik.getFieldProps('yearOfRelease')}\n            error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n            helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n          />\n\n          <FormControl \n            fullWidth\n            error={formik.touched.producer && Boolean(formik.errors.producer)}\n          >\n            <InputLabel>Producer</InputLabel>\n            <Select\n              {...formik.getFieldProps('producer')}\n              label=\"Producer\"\n            >\n              {producers.map(producer => (\n                <MenuItem key={producer._id} value={producer._id}>\n                  {producer.name}\n                </MenuItem>\n              ))}\n            </Select>\n            {formik.touched.producer && formik.errors.producer && (\n              <FormHelperText>{formik.errors.producer}</FormHelperText>\n            )}\n          </FormControl>\n\n          <FormControl \n            fullWidth\n            error={formik.touched.actors && Boolean(formik.errors.actors)}\n          >\n            <InputLabel>Actors</InputLabel>\n            <Select\n              multiple\n              {...formik.getFieldProps('actors')}\n              input={<OutlinedInput label=\"Actors\" />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip\n                      key={value}\n                      label={actors.find(actor => actor._id === value)?.name}\n                      size=\"small\"\n                    />\n                  ))}\n                </Box>\n              )}\n              MenuProps={MenuProps}\n            >\n              {actors.map(actor => (\n                <MenuItem key={actor._id} value={actor._id}>\n                  {actor.name}\n                </MenuItem>\n              ))}\n            </Select>\n            {formik.touched.actors && formik.errors.actors && (\n              <FormHelperText>{formik.errors.actors}</FormHelperText>\n            )}\n          </FormControl>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={loading}\n            size=\"large\"\n            sx={{ mt: 2 }}\n          >\n            {loading ? (\n              <CircularProgress size={24} sx={{ color: 'white' }} />\n            ) : (\n              'Add Movie'\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\nexport default AddMovie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}