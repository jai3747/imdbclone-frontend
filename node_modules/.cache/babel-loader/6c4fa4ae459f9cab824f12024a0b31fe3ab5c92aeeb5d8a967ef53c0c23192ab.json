{"ast":null,"code":"// // // app.js\n\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { \n//   AppBar, \n//   Button, \n//   Paper, \n//   Toolbar, \n//   createTheme,\n//   CircularProgress,\n//   Snackbar,\n//   Alert \n// } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n\n// function App() {\n//   const [mode, setMode] = useState(() => localStorage.getItem('theme') || \"dark\");\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     localStorage.setItem('theme', mode);\n//   }, [mode]);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//       primary: {\n//         main: mode === 'dark' ? '#90caf9' : '#1976d2',\n//       },\n//       background: {\n//         default: mode === 'dark' ? '#121212' : '#ffffff',\n//         paper: mode === 'dark' ? '#1e1e1e' : '#ffffff',\n//       },\n//     },\n//   });\n\n//   const handleError = (error) => {\n//     console.error('Application error:', error);\n//     setError(error.message || 'An unexpected error occurred');\n//     setLoading(false);\n//   };\n\n//   const handleCloseError = () => {\n//     setError(null);\n//   };\n\n//   const navigationItems = [\n//     { path: \"/\", label: \"All Movies\" },\n//     { path: \"/add-movies\", label: \"Add Movies\" },\n//     { path: \"/add-actor\", label: \"Add Actor\" },\n//     { path: \"/add-producer\", label: \"Add Producer\" },\n//   ];\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper \n//         className=\"paper\" \n//         elevation={5} \n//         style={{ \n//           borderRadius: \"0px\", \n//           minHeight: \"100vh\",\n//           position: \"relative\" \n//         }}\n//       >\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//               sx={{ mr: 2 }}\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n\n//             {navigationItems.map((item) => (\n//               <Button\n//                 key={item.path}\n//                 onClick={() => navigate(item.path)}\n//                 color=\"inherit\"\n//                 sx={{ mr: 1 }}\n//               >\n//                 {item.label}\n//               </Button>\n//             ))}\n\n//             <Button\n//               sx={{ marginLeft: \"auto\" }}\n//               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//               color=\"inherit\"\n//             >\n//               {mode === \"light\" ? \"Dark\" : \"Light\"} Mode\n//             </Button>\n//           </Toolbar>\n//         </AppBar>\n\n//         {loading && (\n//           <div style={{\n//             position: 'fixed',\n//             top: '50%',\n//             left: '50%',\n//             transform: 'translate(-50%, -50%)',\n//             zIndex: 1000\n//           }}>\n//             <CircularProgress />\n//           </div>\n//         )}\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={<Movie setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={<AddMovie setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={<AddActor setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={<AddProducer setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={<EditMovies setLoading={setLoading} onError={handleError} />}\n//           />\n//         </Routes>\n\n//         <Snackbar \n//           open={!!error} \n//           autoHideDuration={6000} \n//           onClose={handleCloseError}\n//           anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//         >\n//           <Alert onClose={handleCloseError} severity=\"error\" variant=\"filled\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/jayachandran/test/imdb-clone-frontend/src/App.js"],"sourcesContent":["// // // app.js\n\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { \n//   AppBar, \n//   Button, \n//   Paper, \n//   Toolbar, \n//   createTheme,\n//   CircularProgress,\n//   Snackbar,\n//   Alert \n// } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n\n// function App() {\n//   const [mode, setMode] = useState(() => localStorage.getItem('theme') || \"dark\");\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     localStorage.setItem('theme', mode);\n//   }, [mode]);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//       primary: {\n//         main: mode === 'dark' ? '#90caf9' : '#1976d2',\n//       },\n//       background: {\n//         default: mode === 'dark' ? '#121212' : '#ffffff',\n//         paper: mode === 'dark' ? '#1e1e1e' : '#ffffff',\n//       },\n//     },\n//   });\n\n//   const handleError = (error) => {\n//     console.error('Application error:', error);\n//     setError(error.message || 'An unexpected error occurred');\n//     setLoading(false);\n//   };\n\n//   const handleCloseError = () => {\n//     setError(null);\n//   };\n\n//   const navigationItems = [\n//     { path: \"/\", label: \"All Movies\" },\n//     { path: \"/add-movies\", label: \"Add Movies\" },\n//     { path: \"/add-actor\", label: \"Add Actor\" },\n//     { path: \"/add-producer\", label: \"Add Producer\" },\n//   ];\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper \n//         className=\"paper\" \n//         elevation={5} \n//         style={{ \n//           borderRadius: \"0px\", \n//           minHeight: \"100vh\",\n//           position: \"relative\" \n//         }}\n//       >\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//               sx={{ mr: 2 }}\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n\n//             {navigationItems.map((item) => (\n//               <Button\n//                 key={item.path}\n//                 onClick={() => navigate(item.path)}\n//                 color=\"inherit\"\n//                 sx={{ mr: 1 }}\n//               >\n//                 {item.label}\n//               </Button>\n//             ))}\n\n//             <Button\n//               sx={{ marginLeft: \"auto\" }}\n//               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//               color=\"inherit\"\n//             >\n//               {mode === \"light\" ? \"Dark\" : \"Light\"} Mode\n//             </Button>\n//           </Toolbar>\n//         </AppBar>\n\n//         {loading && (\n//           <div style={{\n//             position: 'fixed',\n//             top: '50%',\n//             left: '50%',\n//             transform: 'translate(-50%, -50%)',\n//             zIndex: 1000\n//           }}>\n//             <CircularProgress />\n//           </div>\n//         )}\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={<Movie setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={<AddMovie setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={<AddActor setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={<AddProducer setLoading={setLoading} onError={handleError} />}\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={<EditMovies setLoading={setLoading} onError={handleError} />}\n//           />\n//         </Routes>\n\n//         <Snackbar \n//           open={!!error} \n//           autoHideDuration={6000} \n//           onClose={handleCloseError}\n//           anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//         >\n//           <Alert onClose={handleCloseError} severity=\"error\" variant=\"filled\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}