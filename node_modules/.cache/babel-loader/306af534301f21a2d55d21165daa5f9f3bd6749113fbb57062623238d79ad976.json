{"ast":null,"code":"// // src/config/api.config.js\n// import axios from 'axios';\n\n// export const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// export const apiClient = axios.create({\n//   baseURL: backend_API,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000,\n// });\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     if (error.response?.status === 404) {\n//       console.error(`Resource not found: ${error.config.url}`);\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// export const api = {\n//   movies: {\n//     getAll: () => apiClient.get('/api/movies'),\n//     add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n//     update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n//     delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`),\n//     getById: (id) => apiClient.get(`/api/movies/${id}`)\n//   },\n//   actors: {\n//     getAll: () => apiClient.get('/api/actors'),\n//     add: (actor) => apiClient.post('/api/actors/add-actor', actor),\n//   },\n//   producers: {\n//     getAll: () => apiClient.get('/api/producers'),\n//     add: (producer) => apiClient.post('/api/producers/add-producer', producer),\n//   }\n// };\n// src/config/api.config.js\nimport axios from 'axios';\nexport const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const apiClient = axios.create({\n  baseURL: backend_API,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\napiClient.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nexport const api = {\n  movies: {\n    getAll: () => apiClient.get('/api/movies'),\n    add: movie => apiClient.post('/api/movies/add-movie', movie),\n    update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n    delete: id => apiClient.delete(`/api/movies/delete-movie/${id}`),\n    getById: id => apiClient.get(`/api/movies/${id}`)\n  },\n  actors: {\n    getAll: () => apiClient.get('/api/actors'),\n    add: actor => apiClient.post('/api/actors/add-actor', actor)\n  },\n  producers: {\n    getAll: () => apiClient.get('/api/producers'),\n    add: producer => apiClient.post('/api/producers/add-producer', producer)\n  }\n};","map":{"version":3,"names":["axios","backend_API","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","timeout","interceptors","response","use","error","console","Promise","reject","api","movies","getAll","get","add","movie","post","update","id","put","delete","getById","actors","actor","producers","producer"],"sources":["/Users/jayachandran/test/imdb-clone-frontend/src/config/api.config.js"],"sourcesContent":["\n// // src/config/api.config.js\n// import axios from 'axios';\n\n// export const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// export const apiClient = axios.create({\n//   baseURL: backend_API,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000,\n// });\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     if (error.response?.status === 404) {\n//       console.error(`Resource not found: ${error.config.url}`);\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// export const api = {\n//   movies: {\n//     getAll: () => apiClient.get('/api/movies'),\n//     add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n//     update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n//     delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`),\n//     getById: (id) => apiClient.get(`/api/movies/${id}`)\n//   },\n//   actors: {\n//     getAll: () => apiClient.get('/api/actors'),\n//     add: (actor) => apiClient.post('/api/actors/add-actor', actor),\n//   },\n//   producers: {\n//     getAll: () => apiClient.get('/api/producers'),\n//     add: (producer) => apiClient.post('/api/producers/add-producer', producer),\n//   }\n// };\n// src/config/api.config.js\nimport axios from 'axios';\n\nexport const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport const apiClient = axios.create({\n  baseURL: backend_API,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\nexport const api = {\n  movies: {\n    getAll: () => apiClient.get('/api/movies'),\n    add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n    update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n    delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`),\n    getById: (id) => apiClient.get(`/api/movies/${id}`)\n  },\n  actors: {\n    getAll: () => apiClient.get('/api/actors'),\n    add: (actor) => apiClient.post('/api/actors/add-actor', actor),\n  },\n  producers: {\n    getAll: () => apiClient.get('/api/producers'),\n    add: (producer) => apiClient.post('/api/producers/add-producer', producer),\n  }\n};"],"mappings":"AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEnF,OAAO,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EACpCC,OAAO,EAAEN,WAAW;EACpBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFJ,SAAS,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMI,GAAG,GAAG;EACjBC,MAAM,EAAE;IACNC,MAAM,EAAEA,CAAA,KAAMd,SAAS,CAACe,GAAG,CAAC,aAAa,CAAC;IAC1CC,GAAG,EAAGC,KAAK,IAAKjB,SAAS,CAACkB,IAAI,CAAC,uBAAuB,EAAED,KAAK,CAAC;IAC9DE,MAAM,EAAEA,CAACC,EAAE,EAAEH,KAAK,KAAKjB,SAAS,CAACqB,GAAG,CAAE,eAAcD,EAAG,EAAC,EAAEH,KAAK,CAAC;IAChEK,MAAM,EAAGF,EAAE,IAAKpB,SAAS,CAACsB,MAAM,CAAE,4BAA2BF,EAAG,EAAC,CAAC;IAClEG,OAAO,EAAGH,EAAE,IAAKpB,SAAS,CAACe,GAAG,CAAE,eAAcK,EAAG,EAAC;EACpD,CAAC;EACDI,MAAM,EAAE;IACNV,MAAM,EAAEA,CAAA,KAAMd,SAAS,CAACe,GAAG,CAAC,aAAa,CAAC;IAC1CC,GAAG,EAAGS,KAAK,IAAKzB,SAAS,CAACkB,IAAI,CAAC,uBAAuB,EAAEO,KAAK;EAC/D,CAAC;EACDC,SAAS,EAAE;IACTZ,MAAM,EAAEA,CAAA,KAAMd,SAAS,CAACe,GAAG,CAAC,gBAAgB,CAAC;IAC7CC,GAAG,EAAGW,QAAQ,IAAK3B,SAAS,CAACkB,IAAI,CAAC,6BAA6B,EAAES,QAAQ;EAC3E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}