{"ast":null,"code":"// // src/config/api.config.js\n// import axios from 'axios';\n\n// export const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// export const apiClient = axios.create({\n//   baseURL: backend_API,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000,\n// });\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     console.error('API Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// export const api = {\n//   movies: {\n//     getAll: () => apiClient.get('/api/movies'),\n//     add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n//     update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n//     delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`),\n//     getById: (id) => apiClient.get(`/api/movies/${id}`)\n//   },\n//   actors: {\n//     getAll: () => apiClient.get('/api/actors'),\n//     add: (actor) => apiClient.post('/api/actors/add-actor', actor),\n//   },\n//   producers: {\n//     getAll: () => apiClient.get('/api/producers'),\n//     add: (producer) => apiClient.post('/api/producers/add-producer', producer),\n//   }\n// };\n// src/config/api.config.js\nimport axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\nexport const api = {\n  movies: {\n    getAll: () => apiClient.get('/api/movies'),\n    getById: id => apiClient.get(`/api/movies/${id}`),\n    add: movie => apiClient.post('/api/movies/add-movie', movie),\n    update: (id, movie) => apiClient.put(`/api/movies/edit-movie/${id}`, movie),\n    delete: id => apiClient.delete(`/api/movies/delete-movie/${id}`)\n  },\n  actors: {\n    getAll: () => apiClient.get('/api/actors'),\n    add: actor => apiClient.post('/api/actors/add-actor', actor)\n  },\n  producers: {\n    getAll: () => apiClient.get('/api/producers'),\n    add: producer => apiClient.post('/api/producers/add-producer', producer)\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","timeout","api","movies","getAll","get","getById","id","add","movie","post","update","put","delete","actors","actor","producers","producer"],"sources":["/Users/jayachandran/test/imdb-clone-frontend/src/config/api.config.js"],"sourcesContent":["// // src/config/api.config.js\n// import axios from 'axios';\n\n// export const backend_API = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// export const apiClient = axios.create({\n//   baseURL: backend_API,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000,\n// });\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     console.error('API Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// export const api = {\n//   movies: {\n//     getAll: () => apiClient.get('/api/movies'),\n//     add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n//     update: (id, movie) => apiClient.put(`/api/movies/${id}`, movie),\n//     delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`),\n//     getById: (id) => apiClient.get(`/api/movies/${id}`)\n//   },\n//   actors: {\n//     getAll: () => apiClient.get('/api/actors'),\n//     add: (actor) => apiClient.post('/api/actors/add-actor', actor),\n//   },\n//   producers: {\n//     getAll: () => apiClient.get('/api/producers'),\n//     add: (producer) => apiClient.post('/api/producers/add-producer', producer),\n//   }\n// };\n// src/config/api.config.js\nimport axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport const apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\nexport const api = {\n  movies: {\n    getAll: () => apiClient.get('/api/movies'),\n    getById: (id) => apiClient.get(`/api/movies/${id}`),\n    add: (movie) => apiClient.post('/api/movies/add-movie', movie),\n    update: (id, movie) => apiClient.put(`/api/movies/edit-movie/${id}`, movie),\n    delete: (id) => apiClient.delete(`/api/movies/delete-movie/${id}`)\n  },\n  actors: {\n    getAll: () => apiClient.get('/api/actors'),\n    add: (actor) => apiClient.post('/api/actors/add-actor', actor)\n  },\n  producers: {\n    getAll: () => apiClient.get('/api/producers'),\n    add: (producer) => apiClient.post('/api/producers/add-producer', producer)\n  }\n};"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEzE,OAAO,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EACpCC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,GAAG,GAAG;EACjBC,MAAM,EAAE;IACNC,MAAM,EAAEA,CAAA,KAAMP,SAAS,CAACQ,GAAG,CAAC,aAAa,CAAC;IAC1CC,OAAO,EAAGC,EAAE,IAAKV,SAAS,CAACQ,GAAG,CAAE,eAAcE,EAAG,EAAC,CAAC;IACnDC,GAAG,EAAGC,KAAK,IAAKZ,SAAS,CAACa,IAAI,CAAC,uBAAuB,EAAED,KAAK,CAAC;IAC9DE,MAAM,EAAEA,CAACJ,EAAE,EAAEE,KAAK,KAAKZ,SAAS,CAACe,GAAG,CAAE,0BAAyBL,EAAG,EAAC,EAAEE,KAAK,CAAC;IAC3EI,MAAM,EAAGN,EAAE,IAAKV,SAAS,CAACgB,MAAM,CAAE,4BAA2BN,EAAG,EAAC;EACnE,CAAC;EACDO,MAAM,EAAE;IACNV,MAAM,EAAEA,CAAA,KAAMP,SAAS,CAACQ,GAAG,CAAC,aAAa,CAAC;IAC1CG,GAAG,EAAGO,KAAK,IAAKlB,SAAS,CAACa,IAAI,CAAC,uBAAuB,EAAEK,KAAK;EAC/D,CAAC;EACDC,SAAS,EAAE;IACTZ,MAAM,EAAEA,CAAA,KAAMP,SAAS,CAACQ,GAAG,CAAC,gBAAgB,CAAC;IAC7CG,GAAG,EAAGS,QAAQ,IAAKpB,SAAS,CAACa,IAAI,CAAC,6BAA6B,EAAEO,QAAQ;EAC3E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}