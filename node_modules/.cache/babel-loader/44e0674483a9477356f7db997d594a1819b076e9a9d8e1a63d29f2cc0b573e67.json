{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/test/imdb-clone-frontend/src/Movie.js\",\n  _s = $RefreshSig$();\n// // // movies.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { MovieCard } from \"./MovieCard\";\nimport { api } from \"./config/api.config\";\nimport { CircularProgress, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getMovies();\n  }, []);\n  const getMovies = async () => {\n    try {\n      setLoading(true);\n      const response = await api.movies.getAll();\n      setMoviesData(response.data);\n    } catch (error) {\n      setError(error.message || 'Failed to fetch movies');\n      console.error(\"Error fetching movies:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteMovie = async id => {\n    try {\n      await api.movies.delete(id);\n      await getMovies();\n    } catch (error) {\n      setError(error.message || 'Failed to delete movie');\n      console.error(\"Error deleting movie:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: moviesData.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      ...movie,\n      onDelete: () => deleteMovie(movie._id)\n    }, movie._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"m3rffwJ2aYsy68xaDf89OSbEpzU=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","MovieCard","api","CircularProgress","Alert","jsxDEV","_jsxDEV","Movie","_s","moviesData","setMoviesData","loading","setLoading","error","setError","getMovies","response","movies","getAll","data","message","console","deleteMovie","id","delete","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","className","map","movie","onDelete","_id","_c","$RefreshReg$"],"sources":["/Users/jayachandran/test/imdb-clone-frontend/src/Movie.js"],"sourcesContent":["// // // movies.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { MovieCard } from \"./MovieCard\";\nimport { api } from \"./config/api.config\";\nimport { CircularProgress, Alert } from \"@mui/material\";\n\nconst Movie = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const getMovies = async () => {\n    try {\n      setLoading(true);\n      const response = await api.movies.getAll();\n      setMoviesData(response.data);\n    } catch (error) {\n      setError(error.message || 'Failed to fetch movies');\n      console.error(\"Error fetching movies:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteMovie = async (id) => {\n    try {\n      await api.movies.delete(id);\n      await getMovies();\n    } catch (error) {\n      setError(error.message || 'Failed to delete movie');\n      console.error(\"Error deleting movie:\", error);\n    }\n  };\n\n  if (loading) return <CircularProgress />;\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\n\n  return (\n    <div className=\"movie-list\">\n      {moviesData.map((movie) => (\n        <MovieCard\n          key={movie._id}\n          {...movie}\n          onDelete={() => deleteMovie(movie._id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,gBAAgB,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMd,GAAG,CAACe,MAAM,CAACC,MAAM,CAAC,CAAC;MAC1CR,aAAa,CAACM,QAAQ,CAACG,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACO,OAAO,IAAI,wBAAwB,CAAC;MACnDC,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMU,WAAW,GAAG,MAAOC,EAAE,IAAK;IAChC,IAAI;MACF,MAAMrB,GAAG,CAACe,MAAM,CAACO,MAAM,CAACD,EAAE,CAAC;MAC3B,MAAMR,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACO,OAAO,IAAI,wBAAwB,CAAC;MACnDC,OAAO,CAACR,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,IAAIF,OAAO,EAAE,oBAAOL,OAAA,CAACH,gBAAgB;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACxC,IAAIf,KAAK,EAAE,oBAAOP,OAAA,CAACF,KAAK;IAACyB,QAAQ,EAAC,OAAO;IAAAC,QAAA,EAAEjB;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;EAEzD,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAD,QAAA,EACxBrB,UAAU,CAACuB,GAAG,CAAEC,KAAK,iBACpB3B,OAAA,CAACL,SAAS;MAAA,GAEJgC,KAAK;MACTC,QAAQ,EAAEA,CAAA,KAAMZ,WAAW,CAACW,KAAK,CAACE,GAAG;IAAE,GAFlCF,KAAK,CAACE,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}